<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
	 - Version: MPL 1.1
	 -
	 - The contents of this file are subject to the Mozilla Public License Version
	 - 1.1 (the "License"); you may not use this file except in compliance with
	 - the License. You may obtain a copy of the License at
	 - http://www.mozilla.org/MPL/
	 -
	 - Software distributed under the License is distributed on an "AS IS" basis,
	 - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
	 - for the specific language governing rights and limitations under the
	 - License.
	 -
	 - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://hidenavbar/content/options.css" type="text/css"?>

<!DOCTYPE dialog SYSTEM "chrome://hidenavbar/locale/options.dtd">

<window
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	title="&dialog.title;"
	id="diagHideNavBarOptionsWindow"
	windowtype="hnb:options"
    onload="fncOnLoad();">

<script type="application/x-javascript" src="chrome://global/content/nsUserSettings.js"/>
<script type="application/x-javascript">

theKeyCode = 0;
blnGetKey = false;
blnSomethingChanged = false;


function fncChangeEnabled(bln)
{
	var radiolist = document.getElementById('rblHideOnStart');
	var ListenButton = document.getElementById('btnChooseKeyCode');
	
	radiolist.disabled = bln;
	ListenButton.disabled = bln;
	
	if (blnGetKey == true)
		fncToggleListen();

	var AutoHideCheck = document.getElementById('chkAutohide');
	
	AutoHideCheck.disabled = bln;
	
	var HideDelay = document.getElementById('txtAutohideDelay');
	var ShowDelay = document.getElementById('txtAutohideShowDelay');
	
	HideDelay.disabled = !AutoHideCheck.checked;
	ShowDelay.disabled = !AutoHideCheck.checked;
}

function fncChangeAutoHide(bln)
{
	var HideDelay = document.getElementById('txtAutohideDelay');
	var ShowDelay = document.getElementById('txtAutohideShowDelay');
	
	HideDelay.disabled = bln;
	ShowDelay.disabled = bln;
}

function fncSetChanged(bln)
{
	var obj = document.getElementById('btnApply');
	
	obj.disabled = !bln;
	
	blnSomethingChanged = bln;
}

function doCancel()
{
	window.close();
}

function doOK()
{
	if (blnSomethingChanged == false)
	{
		doCancel();
		return;
	}
	
	var blnContinue = confirm('Are you sure you want to save these settings and close this window?');
	
	if (blnContinue == false)
	{
		doCancel();
		return;
	}

    doApply();
	
	window.close();
}

function doApply()
{
	if (blnSomethingChanged == false)
		return;
	
	var intKeyCode = document.getElementById('txtKeyCode').value;
	var intHideOnStart = document.getElementById('rblHideOnStart').value;
	var blnEnabled = document.getElementById('chkEnabled').checked;
	var blnAutohide = document.getElementById('chkAutohide').checked;
	var intAutohideDelay = document.getElementById('txtAutohideDelay').value;
	var intAutohideShowDelay = document.getElementById('txtAutohideShowDelay').value;
	
	re = new RegExp("\\d");
	
	if (re.test(intAutohideDelay) == false)
	{
		alert("Please enter only numbers into the Auto-Hide Delay field.");
		document.getElementById('txtAutohideDelay').focus();
		return false;
	}
	
	if (re.test(intAutohideShowDelay) == false)
	{
		alert("Please enter only numbers into the Auto-Hide Show Delay field.");
		document.getElementById('txtAutohideShowDelay').focus();
		return false;
	}
    
	nsPreferences.setIntPref("hidenavbar.keycode", intKeyCode);
	nsPreferences.setBoolPref("hidenavbar.enabled", blnEnabled);
	nsPreferences.setIntPref("hidenavbar.hideonstart", intHideOnStart);
	nsPreferences.setBoolPref("hidenavbar.autohide", blnAutohide);
	nsPreferences.setIntPref("hidenavbar.autohidedelay", intAutohideDelay);
	nsPreferences.setIntPref("hidenavbar.autohideshowdelay", intAutohideShowDelay);
	
	fncSetChanged(false);
}

function fncGetKeyCode(e)
{
    if (e.type != "keydown" || blnGetKey == false)
        return;
	
	fncSetChanged(true);
	
    var txtKeyCode = document.getElementById('txtKeyCode');
    txtKeyCode.value = e.which;
	
	fncToggleListen();
}

window.onkeydown = fncGetKeyCode;

function fncSetGetKey(blnValue)
{
	blnGetKey = blnValue;
}

function fncToggleListen()
{
	var obj = document.getElementById('btnChooseKeyCode');
	
	if (blnGetKey == true)
		obj.label = 'Choose KeyCode';
	else
	{
		alert("Hide Navigation Bar will now listen.  Press the key (only one at this time) that you wish to be used as your toggle key.");
		obj.label = 'Cancel Listen for Key';
	}

	fncSetGetKey(!blnGetKey);
}


function fncOnLoad()
{
	theKeyCode = nsPreferences.getIntPref("hidenavbar.keycode");
	var blnEnabled = nsPreferences.getBoolPref("hidenavbar.enabled", true);
	var intHideOnStart = nsPreferences.getIntPref("hidenavbar.hideonstart");
	var blnAutohide = nsPreferences.getBoolPref("hidenavbar.autohide", true);
	var intAutohideDelay = nsPreferences.getIntPref("hidenavbar.autohidedelay");
	var intAutohideShowDelay = nsPreferences.getIntPref("hidenavbar.autohideshowdelay");
	
	var txtKeyCode = document.getElementById('txtKeyCode');
	var chkEnabled = document.getElementById('chkEnabled');
	var rblHideOnStart = document.getElementById('rblHideOnStart');
	var chkAutohide = document.getElementById('chkAutohide');
	var txtAutohideDelay = document.getElementById('txtAutohideDelay');
	var txtAutohideShowDelay = document.getElementById('txtAutohideShowDelay');
	
	txtKeyCode.value = theKeyCode;
	chkEnabled.checked = blnEnabled;
	rblHideOnStart.value = intHideOnStart;
	chkAutohide.checked = blnAutohide;
	txtAutohideDelay.value = intAutohideDelay;
	txtAutohideShowDelay.value = intAutohideShowDelay;
}
</script>

<description id="title" value="&caption.title;"/>
<description id="description" value="&description;"/>


<tabbox>
  <tabs>
    <tab label="General" selected="true"/>
    <tab label="Auto-Hide"/>
  </tabs>
  
<tabpanels>
	<tabpanel id="tabGeneral" orient="vertical">
	
	

<groupbox>
<caption>
<xul:checkbox xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="chkEnabled" label="&enabled-checkbox.label;" checked="true" oncommand="fncSetChanged(true); fncChangeEnabled(!this.checked);" />
</caption>


<table cellpadding="5" cellspacing="0">
<tr>
<td style="padding: 5px; width: 120px;">
<description id="KeyCodeLabel" value="&keycode.label;"/>
</td>
<td style="padding: 5px;">
<xul:textbox xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="txtKeyCode" disabled="true" label="&setkeycode.label;" style="width: 35px;" value="0" onkeydown="fncGetKeyCode(e);"  /> <xul:button xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="btnChooseKeyCode" label="&setkeycode.label;" style="width: 125px;" oncommand="fncToggleListen();"  />
</td>
</tr>
</table>
	

<table cellpadding="5" cellspacing="0">
<tr>
<td style="padding: 5px; width: 120px;">
<description id="HideOnStartLabel" value="&hideonstart.label;"/>
</td>
<td style="padding: 5px;">
<radiogroup id="rblHideOnStart">
<radio label="&hideonstart.hide.label;" value="1" onclick="fncSetChanged(true);"  onchange="fncSetChanged(true);" />
<radio label="&hideonstart.show.label;" value="0" onclick="fncSetChanged(true);" onchange="fncSetChanged(true);" />
<radio label="&hideonstart.remember.label;" value="2" onclick="fncSetChanged(true);" onchange="fncSetChanged(true);" />
</radiogroup>
</td>
</tr>
</table>





</groupbox>
	
	
	</tabpanel>
	<tabpanel id="tabAutoHide" orient="vertical">
	
	


<groupbox>
<caption>
<xul:checkbox xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="chkAutohide" label="&autohide-checkbox.label;" checked="false" oncommand="fncSetChanged(true); fncChangeAutoHide(!this.checked)" />
</caption>


<table cellpadding="5" cellspacing="0">
<tr>
<td style="padding: 5px; width: 120px;">
<description id="AutohideDelayLabel" value="&autohidedelay.label;"/>
</td>
<td style="padding: 5px;">
<textbox type="number" min="0" max="5000" id="txtAutohideDelay" value="0" style="width: 50px;" onfocus="fncSetChanged(true);" /> miliseconds
</td>
</tr>
</table>


<!--table cellpadding="5" cellspacing="0">
<tr>
<td style="padding: 5px; width: 120px;">
</td>
<td style="padding: 5px;">
<label id="AutohideDelayDesc" class="desc" value="&autohidedelay.description;"/>
</td>
</tr>
</table-->


<table cellpadding="5" cellspacing="0">
<tr>
<td style="padding: 5px; width: 120px;">
<description id="AutohideShowDelayLabel" value="&autohideshowdelay.label;"/>
</td>
<td style="padding: 5px;">
<textbox type="number" min="0" max="5000" id="txtAutohideShowDelay" value="0" style="width: 50px;" onfocus="fncSetChanged(true);" /> miliseconds
</td>
</tr>
</table>

<!--table cellpadding="5" cellspacing="0">
<tr>
<td style="padding: 5px; width: 120px;">
</td>
<td style="padding: 5px;">
<label id="AutohideShowDelayDesc" class="desc" value="&autohideshowdelay.description;"/>
</td>
</tr>
</table-->


</groupbox>


	
	</tabpanel>
</tabpanels>
</tabbox>


<hbox style="padding-top: 5px;">
<spacer flex="1"/>
<button id="btnOK" style="width: 70px; text-align: center;" onclick="doOK();">&button.ok.label;</button>
<button id="btnCancel" style="width: 70px; text-align: center;" onclick="doCancel();">&button.cancel.label;</button>
<button id="btnApply" style="width: 70px; text-align: center;" onclick="doApply();" disabled="true">&button.apply.label;</button>
</hbox>




</window>
